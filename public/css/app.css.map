{"version":3,"sources":["webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/pages/_video.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/common/_sidebar.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/app.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/_include-media.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/common/_video_wrapper.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/common/_footer.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/common/_general.scss","webpack:///./resources/sass/C:/xampp/htdocs/video-platform/resources/sass/pages/_homepage.scss"],"names":[],"mappings":"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","file":"/css/app.css","sourcesContent":[".video-container {\r\n    // display: none !important;\r\n    @include media(\"<=md\") {\r\n        margin: 2px 2px;\r\n    }\r\n\r\n    .title {\r\n        margin-top: 20px;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .description {\r\n        margin-top: 20px;\r\n        font-size: 1rem;\r\n        // word-break: break-all;\r\n        word-break: normal;\r\n\r\n        p {\r\n            color: #000;\r\n            font-size: 1em;\r\n            line-height: 1.3;\r\n        }\r\n\r\n        p {\r\n            img {\r\n                width: 90%;\r\n                display: block;\r\n                margin: 0 auto;\r\n\r\n                @include media(\"<=xs\") {\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n\r\n        blockquote {\r\n            background: #f9f9f9;\r\n            border-left: 10px solid #ccc;\r\n            margin: 1.5em 15px;\r\n            padding: 0.5em 25px;\r\n            quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\r\n        }\r\n\r\n        blockquote:before {\r\n            color: #ccc;\r\n            content: open-quote;\r\n            font-size: 4em;\r\n            line-height: 0.1em;\r\n            margin-right: 0.25em;\r\n            vertical-align: -0.4em;\r\n        }\r\n\r\n        blockquote p {\r\n            display: inline;\r\n            color: gray;\r\n        }\r\n\r\n        a {\r\n            color: #007bff;\r\n            text-decoration: none;\r\n            background-color: transparent;\r\n            -webkit-text-decoration-skip: objects;\r\n        }\r\n\r\n        strong {\r\n            font-weight: bold;\r\n        }\r\n\r\n        h2 {\r\n            font-size: 1.4rem;\r\n        }\r\n\r\n        h3,\r\n        h4,\r\n        h5,\r\n        h6 {\r\n            font-size: 1.3rem;\r\n        }\r\n    }\r\n\r\n    #tags {\r\n        margin-top: 10px;\r\n\r\n        @include media(\"<=sm\") {\r\n            font-size: 18px;\r\n        }\r\n    }\r\n\r\n    #similar-videos {\r\n        .video {\r\n            margin-bottom: 16px;\r\n\r\n            .text {\r\n                margin-bottom: 0px;\r\n                color: black;\r\n                font-weight: bold;\r\n                font-size: 1rem;\r\n                line-height: 1.5;\r\n            }\r\n\r\n            .col-5 {\r\n                min-height: 100px;\r\n                background-repeat: no-repeat;\r\n                background-size: cover;\r\n\r\n                @include media(\"<=md\") {\r\n                    min-height: 190px;\r\n                }\r\n\r\n                @include media(\"<=sm\") {\r\n                    min-height: 120px;\r\n                }\r\n\r\n                @include media(\"<=xs\") {\r\n                    min-height: 80px;\r\n                }\r\n            }\r\n        }\r\n\r\n        @include media(\"<=md\") {\r\n            margin-top: 50px;\r\n            margin-left: 15px;\r\n            margin-right: 15px;\r\n        }\r\n\r\n        @include media(\"<=sm\") {\r\n            margin: 30px 15px;\r\n            overflow: hidden;\r\n        }\r\n\r\n        .duration {\r\n            position: absolute;\r\n            z-index: 2;\r\n            bottom: 2px;\r\n            right: 2px;\r\n            color: white;\r\n            background: black;\r\n            padding: 1px 6px;\r\n            opacity: 0.7;\r\n            font-size: 10px;\r\n            border-radius: 10px;\r\n        }\r\n    }\r\n}\r\n","#sidebar {\r\n    min-width: 250px;\r\n    max-width: 250px;\r\n    background: #000000;\r\n    color: #fff;\r\n    transition: all 0.3s;\r\n\r\n    &.active {\r\n        min-width: 80px;\r\n        max-width: 80px;\r\n        text-align: center;\r\n\r\n        .sidebar-header h3 {\r\n            display: none;\r\n\r\n            @include media(\"<=sm\") {\r\n                display: none !important;\r\n            }\r\n        }\r\n\r\n        .header-text {\r\n            font-family: monospace;\r\n            padding-top: 16px;\r\n            font-size: 1em;\r\n            color: #fff;\r\n            margin-bottom: 0.5rem;\r\n            font-family: inherit;\r\n            font-weight: 700;\r\n            line-height: 1.2;\r\n        }\r\n\r\n        .sidebar-header strong {\r\n            display: block;\r\n        }\r\n\r\n        ul li a {\r\n            padding: 20px 10px;\r\n            text-align: center;\r\n            font-size: 0.7em;\r\n\r\n            i {\r\n                margin-right: 0;\r\n                display: block;\r\n                font-size: 1.8em;\r\n                margin-bottom: 5px;\r\n            }\r\n        }\r\n\r\n        .dropdown-toggle::after {\r\n            top: auto;\r\n            bottom: 10px;\r\n            right: 50%;\r\n            transform: translateX(50%);\r\n        }\r\n\r\n        @include media(\"<=sm\") {\r\n            margin-left: 0 !important;\r\n        }\r\n    }\r\n\r\n    ul li a {\r\n        text-align: left;\r\n    }\r\n\r\n    .sidebar-header {\r\n        display: block;\r\n        padding: 20px;\r\n        /* background: #357ebf; */\r\n        background-color: white;\r\n        color: black;\r\n\r\n        h3 {\r\n            @include media(\"<=sm\") {\r\n                display: none !important;\r\n            }\r\n        }\r\n\r\n        strong {\r\n            display: none;\r\n            font-size: 1.8em;\r\n        }\r\n\r\n        @include media(\"<=sm\") {\r\n            display: block;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: black;\r\n            color: white;\r\n            transition: 0.6s;\r\n        }\r\n    }\r\n\r\n    ul.components {\r\n        padding: 20px 0;\r\n        padding-top: 0px;\r\n        /* border-bottom: 1px solid #47748b; */\r\n    }\r\n\r\n    ul li a {\r\n        padding: 10px;\r\n        font-size: 1.1em;\r\n        display: block;\r\n\r\n        &:hover {\r\n            /* color: #357ebf; */\r\n            color: black;\r\n            background: #fff;\r\n            transition: 0.3s;\r\n        }\r\n\r\n        i {\r\n            margin-right: 10px;\r\n\r\n            @include media(\"<=sm\") {\r\n                margin-right: 0;\r\n                display: block;\r\n                font-size: 1.3em;\r\n            }\r\n        }\r\n\r\n        span {\r\n            @include media(\"<=sm\") {\r\n                font-size: 0.85em;\r\n            }\r\n        }\r\n\r\n        @include media(\"<=sm\") {\r\n            padding: 20px 10px;\r\n        }\r\n    }\r\n\r\n    ul li.active > a,\r\n    a[aria-expanded=\"true\"] {\r\n        color: #fff;\r\n        background: #6d7fcc;\r\n    }\r\n\r\n    .live {\r\n        display: none;\r\n        color: #ff4040;\r\n        font-weight: bold;\r\n    }\r\n\r\n    @include media(\"<=sm\") {\r\n        // min-width: 80px;\r\n        // max-width: 80px;\r\n        // text-align: center;\r\n        // margin-left: -80px !important;\r\n        // margin-left: 0;\r\n        display: none !important;\r\n    }\r\n}\r\n","// Fonts\r\n@import url('https://fonts.googleapis.com/css?family=Nunito');\r\n\r\n// Variables\r\n@import 'variables';\r\n@import \"include-media\";\r\n\r\n// SCSS\r\n@import \"common/sidebar\";\r\n@import \"common/video_wrapper\";\r\n@import \"common/footer\";\r\n@import \"common/general\";\r\n\r\n// PAGES\r\n@import \"pages/homepage\";\r\n@import \"pages/video\";","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n@mixin transform($v) {\r\n    -webkit-transform: $v;\r\n    -moz-transform: $v;\r\n    -ms-transform: $v;\r\n    -o-transform: $v;\r\n    transform: $v;\r\n}\r\n\r\n@mixin transform-origin($v1, $v2) {\r\n    -webkit-transform-origin: $v1 $v2;\r\n    -moz-transform-origin: $v1 $v2;\r\n    -ms-transform-origin: $v1 $v2;\r\n    -o-transform-origin: $v1 $v2;\r\n    transform-origin: $v1 $v2;\r\n}\r\n\r\n@mixin filter($v) {\r\n    -webkit-filter: $v;\r\n    -moz-filter: $v;\r\n    -ms-filter: $v;\r\n    -o-filter: $v;\r\n    filter: $v;\r\n}\r\n\r\n@mixin transition($v) {\r\n    -webkit-transition: $v;\r\n    -moz-transition: $v;\r\n    -ms-transition: $v;\r\n    -o-transition: $v;\r\n    transition: $v;\r\n}\r\n\r\n@mixin gradient-horizontal(\r\n    $start-color: #555,\r\n    $end-color: #333,\r\n    $start-percent: 0%,\r\n    $end-percent: 100%\r\n) {\r\n    background-image: -webkit-linear-gradient(\r\n        left,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent\r\n    );\r\n    background-image: -o-linear-gradient(\r\n        left,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent\r\n    );\r\n    background-image: linear-gradient(\r\n        to right,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent\r\n    );\r\n    background-repeat: repeat-x;\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1);\r\n}\r\n\r\n@mixin gradient-horizontal-s(\r\n    $start-color: #555,\r\n    $end-color: #333,\r\n    $start-percent: 0%,\r\n    $end-percent: 100%,\r\n    $th-percent: 100%\r\n) {\r\n    background-image: -webkit-linear-gradient(\r\n        left,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent,\r\n        $start-color $th-percent\r\n    );\r\n    background-image: -o-linear-gradient(\r\n        left,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent,\r\n        $start-color $th-percent\r\n    );\r\n    background-image: linear-gradient(\r\n        to right,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent,\r\n        $start-color $th-percent\r\n    );\r\n    background-repeat: repeat-x;\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1);\r\n}\r\n\r\n@mixin gradient-vertical(\r\n    $start-color: #555,\r\n    $end-color: #333,\r\n    $start-percent: 0%,\r\n    $end-percent: 100%\r\n) {\r\n    background-image: -webkit-linear-gradient(\r\n        top,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent\r\n    ); // Safari 5.1-6, Chrome 10+\r\n    background-image: -o-linear-gradient(\r\n        top,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent\r\n    ); // Opera 12\r\n    background-image: linear-gradient(\r\n        to bottom,\r\n        $start-color $start-percent,\r\n        $end-color $end-percent\r\n    ); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\r\n    background-repeat: repeat-x;\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down\r\n}\r\n\r\n@mixin flex-box {\r\n    display: -webkit-box;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n    -webkit-flex-wrap: nowrap;\r\n    flex-wrap: nowrap;\r\n}\r\n\r\n@mixin border-radius($v) {\r\n    border-radius: $v;\r\n    -moz-border-radius: $v;\r\n    -webkit-border-radius: $v;\r\n    background-clip: padding-box;\r\n}\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n    \"phone\": 320px,\r\n    \"tablet\": 768px,\r\n    \"desktop\": 1024px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n    \"screen\": \"screen\",\r\n    \"print\": \"print\",\r\n    \"handheld\": \"handheld\",\r\n    \"landscape\": \"(orientation: landscape)\",\r\n    \"portrait\": \"(orientation: portrait)\",\r\n    \"retina2x\":\r\n        \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\r\n    \"retina3x\":\r\n        \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\"\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n    \"px\": 1,\r\n    \"em\": 0.01,\r\n    \"rem\": 0.1,\r\n    \"\": 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: \"desktop\" !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n    @if feature-exists(\"at-error\") {\r\n        @error $message;\r\n    } @else {\r\n        @warn $message;\r\n        $_: noop();\r\n    }\r\n\r\n    @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n    @if im-log($message) {\r\n    }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n    $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n    @if not $no-media-breakpoint-value {\r\n        @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\r\n        }\r\n    }\r\n\r\n    @each $condition in $conditions {\r\n        @if not map-has-key($media-expressions, $condition) {\r\n            $operator: get-expression-operator($condition);\r\n            $prefix: get-expression-prefix($operator);\r\n            $value: get-expression-value($condition, $operator);\r\n\r\n            @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\r\n                ($prefix == \"min\" and $value > $no-media-breakpoint-value)\r\n            {\r\n                @return false;\r\n            }\r\n        } @else if not index($im-no-media-expressions, $condition) {\r\n            @return false;\r\n        }\r\n    }\r\n\r\n    @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n    @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\r\n        @if str-index($expression, $operator) {\r\n            @return $operator;\r\n        }\r\n    }\r\n\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log(\"No operator found in `#{$expression}`.\");\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n    $operator-index: str-index($expression, $operator);\r\n    $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n    $dimension: \"width\";\r\n\r\n    @if str-length($parsed-dimension) > 0 {\r\n        $dimension: $parsed-dimension;\r\n    }\r\n\r\n    @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n    @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n    $operator-index: str-index($expression, $operator);\r\n    $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n    @if map-has-key($breakpoints, $value) {\r\n        $value: map-get($breakpoints, $value);\r\n    } @else {\r\n        $value: to-number($value);\r\n    }\r\n\r\n    $interval: map-get($unit-intervals, unit($value));\r\n\r\n    @if not $interval {\r\n        // It is not possible to include a mixin inside a function, so we have to\r\n        // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n        // functions cannot be called anywhere in Sass, we need to hack the call in\r\n        // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n        // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n        $_: im-log(\"Unknown unit `#{unit($value)}`.\");\r\n    }\r\n\r\n    @if $operator == \">\" {\r\n        $value: $value + $interval;\r\n    } @else if $operator == \"<\" {\r\n        $value: $value - $interval;\r\n    }\r\n\r\n    @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n    // If it is part of $media-expressions, it has no operator\r\n    // then there is no need to go any further, just return the value\r\n    @if map-has-key($media-expressions, $expression) {\r\n        @return map-get($media-expressions, $expression);\r\n    }\r\n\r\n    $operator: get-expression-operator($expression);\r\n    $dimension: get-expression-dimension($expression, $operator);\r\n    $prefix: get-expression-prefix($operator);\r\n    $value: get-expression-value($expression, $operator);\r\n\r\n    @return \"(#{$prefix}-#{$dimension}: #{$value})\";\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n    @if length($list) < 1 or $start > $end {\r\n        @return ();\r\n    }\r\n\r\n    $result: ();\r\n\r\n    @for $i from $start through $end {\r\n        $result: append($result, nth($list, $i));\r\n    }\r\n\r\n    @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n    @if type-of($value) == \"number\" {\r\n        @return $value;\r\n    } @else if type-of($value) != \"string\" {\r\n        $_: im-log(\"Value for `to-number` should be a number or a string.\");\r\n    }\r\n\r\n    $first-character: str-slice($value, 1, 1);\r\n    $result: 0;\r\n    $digits: 0;\r\n    $minus: ($first-character == \"-\");\r\n    $numbers: (\r\n        \"0\": 0,\r\n        \"1\": 1,\r\n        \"2\": 2,\r\n        \"3\": 3,\r\n        \"4\": 4,\r\n        \"5\": 5,\r\n        \"6\": 6,\r\n        \"7\": 7,\r\n        \"8\": 8,\r\n        \"9\": 9\r\n    );\r\n\r\n    // Remove +/- sign if present at first character\r\n    @if ($first-character == \"+\" or $first-character == \"-\") {\r\n        $value: str-slice($value, 2);\r\n    }\r\n\r\n    @for $i from 1 through str-length($value) {\r\n        $character: str-slice($value, $i, $i);\r\n\r\n        @if not(index(map-keys($numbers), $character) or $character == \".\") {\r\n            @return to-length(\r\n                if($minus, -$result, $result),\r\n                str-slice($value, $i)\r\n            );\r\n        }\r\n\r\n        @if $character == \".\" {\r\n            $digits: 1;\r\n        } @else if $digits == 0 {\r\n            $result: $result * 10 + map-get($numbers, $character);\r\n        } @else {\r\n            $digits: $digits * 10;\r\n            $result: $result + map-get($numbers, $character) / $digits;\r\n        }\r\n    }\r\n\r\n    @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n    $units: (\r\n        \"px\": 1px,\r\n        \"cm\": 1cm,\r\n        \"mm\": 1mm,\r\n        \"%\": 1%,\r\n        \"ch\": 1ch,\r\n        \"pc\": 1pc,\r\n        \"in\": 1in,\r\n        \"em\": 1em,\r\n        \"rem\": 1rem,\r\n        \"pt\": 1pt,\r\n        \"ex\": 1ex,\r\n        \"vw\": 1vw,\r\n        \"vh\": 1vh,\r\n        \"vmin\": 1vmin,\r\n        \"vmax\": 1vmax\r\n    );\r\n\r\n    @if not index(map-keys($units), $unit) {\r\n        $_: im-log(\"Invalid unit `#{$unit}`.\");\r\n    }\r\n\r\n    @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n    // Save global configuration\r\n    $global-breakpoints: $breakpoints;\r\n    $global-media-expressions: $media-expressions;\r\n\r\n    // Update global configuration\r\n    $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n    $media-expressions: map-merge(\r\n        $media-expressions,\r\n        $tweak-media-expressions\r\n    ) !global;\r\n\r\n    @content;\r\n\r\n    // Restore global configuration\r\n    $breakpoints: $global-breakpoints !global;\r\n    $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n    @if ($im-media-support and length($conditions) == 0) or\r\n        (\r\n            not\r\n                $im-media-support and\r\n                im-intercepts-static-breakpoint($conditions...)\r\n        )\r\n    {\r\n        @content;\r\n    } @else if ($im-media-support and length($conditions) > 0) {\r\n        @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n            // Recursive call\r\n            @include media(slice($conditions, 2) ...) {\r\n                @content;\r\n            }\r\n        }\r\n    }\r\n}\r\n",".text-wrap {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.video-wrapper {\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n\r\n    .video-box {\r\n        padding-top: 10px;\r\n        padding-bottom: 20px;\r\n\r\n        .description {\r\n            margin-top: 8px;\r\n            .title {\r\n                font-weight: 500;\r\n            }\r\n\r\n            h2.title {\r\n                font-size: 1.1rem;\r\n            }\r\n        }\r\n\r\n        .duration {\r\n            position: absolute;\r\n            z-index: 2;\r\n            bottom: 96px;\r\n            right: 18px;\r\n            color: white;\r\n            background: black;\r\n            padding: 1px 6px;\r\n            opacity: 0.9;\r\n            font-size: 12px;\r\n            border-radius: 10px;\r\n        }\r\n\r\n        .img {\r\n            display: block;\r\n            width: 100%;\r\n            height: 250px;\r\n            -o-object-fit: cover;\r\n            object-fit: cover;\r\n            border-radius: 3px;\r\n\r\n            &:hover {\r\n                box-shadow: 3px 3px 11px 0px rgba(0, 0, 0, 0.5);\r\n                transition: 0.15s;\r\n            }\r\n\r\n            @include media(\"<xl\") {\r\n                height: 180px;\r\n            }\r\n\r\n            @include media(\"<=sm\") {\r\n                height: 250px;\r\n            }\r\n\r\n            @include media(\"<=xs\") {\r\n                height: 240px;\r\n            }\r\n\r\n            @include media(\"<=xss\") {\r\n                height: 180px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .stats {\r\n        opacity: 0.6;\r\n        font-size: 0.9rem;\r\n\r\n        .date {\r\n            text-align: left;\r\n            font-size: 0.7rem;\r\n            opacity: 0.8;\r\n            // @include media(\"<=lg\") {\r\n            //     text-align: left;\r\n            //     font-size: 0.7rem\r\n            // }\r\n        }\r\n    }\r\n\r\n    @include media(\"<=sm\") {\r\n        margin-left: 0px;\r\n        margin-right: 0px;\r\n    }\r\n}\r\n","footer {\r\n    text-align: center;\r\n    color: white;\r\n    background-color: black;\r\n\r\n    div {\r\n        opacity: 0.25;\r\n        font-size: 0.8rem;\r\n        padding: 2px 10px;\r\n    }\r\n}\r\n","body {\r\n    font-family: \"Poppins\", sans-serif;\r\n    background: #fafafa;\r\n}\r\n\r\np {\r\n    font-family: \"Poppins\", sans-serif;\r\n    font-size: 1.1em;\r\n    font-weight: 300;\r\n    line-height: 1.7em;\r\n    color: #999;\r\n}\r\n\r\nh3 {\r\n    font-size: 1.5rem;\r\n}\r\n\r\na,\r\na:hover,\r\na:focus {\r\n    color: inherit;\r\n    text-decoration: none;\r\n    transition: all 0.3s;\r\n}\r\n\r\n.navbar {\r\n    padding: 15px 10px;\r\n    background: #fff;\r\n    border: none;\r\n    border-radius: 0;\r\n    margin-bottom: 40px;\r\n    /* box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1); */\r\n}\r\n\r\ni,\r\nspan {\r\n    display: inline-block;\r\n}\r\n\r\n.wrapper {\r\n    display: flex;\r\n    align-items: stretch;\r\n    overflow-x: hidden;\r\n    #content {\r\n        width: 100%;\r\n        padding: 20px;\r\n        padding-top: 5px !important;\r\n        min-height: 100vh;\r\n        transition: all 0.3s;\r\n\r\n        @include media(\"<=sm\") {\r\n            padding: 15px 2px;\r\n        }\r\n    }\r\n}\r\n\r\n#mobile-header {\r\n    display: none;\r\n\r\n    @include media(\"<=sm\") {\r\n        display: block;\r\n        width: 124px;\r\n        position: absolute;\r\n        z-index: 2;\r\n        left: calc(50% - 68px);\r\n        top: 7px;\r\n        font-size: 150%;\r\n        font-weight: 400;\r\n        font-style: normal;\r\n        line-height: 2.25;\r\n    }\r\n}\r\n","#sidebarCollapse {\r\n    transition: all 0.3s;\r\n    display: none;\r\n    background-color: #343a40;\r\n    border-color: #343a40;\r\n    padding-right: 10px;\r\n    padding-left: 15px;\r\n\r\n    @include media(\"<=sm\") {\r\n        display: none !important;\r\n    }\r\n\r\n    &:hover {\r\n        background-color: black;\r\n        border-color: black;\r\n    }\r\n}\r\n\r\n.rotate180 {\r\n    transition: all 0.3s;\r\n    -webkit-transform: rotate(180deg);\r\n    -moz-transform: rotate(180deg);\r\n    -o-transform: rotate(180deg);\r\n    -ms-transform: rotate(180deg);\r\n    transform: rotate(180deg);\r\n    background-color: white !important;\r\n    border-color: black !important;\r\n    color: black !important;\r\n}\r\n\r\n#hamburgerMenu {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    z-index: 999;\r\n}\r\n\r\n.search-wrapper {\r\n    @include media(\"<=sm\") {\r\n        margin-top: 50px;\r\n        padding-left: 0px;\r\n        padding-right: 0px;\r\n    }\r\n}\r\n\r\n.nav-item {\r\n    @include media(\"<=sm\") {\r\n        text-align: center;\r\n        font-size: 20px;\r\n    }\r\n}\r\n\r\n#mobile-nav {\r\n    display: none;\r\n    z-index: 999;\r\n    background-color: black;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: #fff;\r\n    padding: 30px 30px;\r\n    padding-top: 140px;\r\n    text-align: center;\r\n\r\n    .bold {\r\n        font-weight: bold;\r\n    }\r\n\r\n    a {\r\n        color: #fff;\r\n        cursor: pointer;\r\n    }\r\n\r\n    #mobile-nav-exit {\r\n        position: absolute;\r\n        right: 25px;\r\n        top: 5px;\r\n        font-size: 45px;\r\n    }\r\n\r\n    .mobile-nav-element {\r\n        height: 140px;\r\n\r\n        span {\r\n            display: block;\r\n            margin-top: 10px;\r\n        }\r\n    }\r\n}\r\n\r\n.overflow-hidden {\r\n    overflow: hidden;\r\n}\r\n"],"sourceRoot":""}